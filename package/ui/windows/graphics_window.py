# Form implementation generated from reading ui file '.\designer\graphics_window.ui'
#
# Created by: PyQt6 UI code generator 6.7.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

import typing
import pandas as pd
from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtGui import QCloseEvent
from PyQt6.QtWidgets import QMainWindow, QWidget, QSizePolicy

from db.connect_db import ConnectDB
from db.media_db import TMedia
from package.ui.styles import get_stylesheet

# Graphics
import matplotlib

matplotlib.use('QtAgg')

from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
import matplotlib.pyplot as plt
from matplotlib.figure import Figure

plt.style.use('dark_background')


# plt.rcParams.update({
#     "lines.color": "white",
#     "patch.edgecolor": "white",
#     "text.color": "black",
#     "axes.facecolor": "white",
#     "axes.edgecolor": "lightgray",
#     "axes.labelcolor": "white",
#     "xtick.color": "white",
#     "ytick.color": "white",
#     "grid.color": "lightgray",
#     "figure.facecolor": "black",
#     "figure.edgecolor": "black",
#     "savefig.facecolor": "black",
#     "savefig.edgecolor": "black"})


# class MplCanvas(FigureCanvasQTAgg):
#
#     def __init__(self, parent=None, width=5, height=4, dpi=100):
#         fig = Figure(figsize=(width, height), dpi=dpi)
#         self.axes = fig.add_subplot(111)
#         super().__init__(fig)


class MediaCanvas(FigureCanvas):
    def __init__(self, parent=None):
        fig, ax = plt.subplots(1, dpi=100, figsize=(3, 3),
                               sharey=True, facecolor='none')

        ax.set_facecolor('none')
        fig.patch.set_facecolor('none')

        super().__init__(fig)
        '''
            data = TMedia.get_data()
            print(pd.DataFrame(data))

            conn = ConnectDB().connection()
            if conn is None:
                return

            df = pd.read_sql_query('SELECT * FROM media_responses', conn)

            conn.close()
            print(df.head())

        '''

        # ax.bar(nombres, tamaño, color=colores)
        # self.setFixedSize(400, 400)

        df = TMedia.get_data_pandas()

        if df is None:
            return

        y = df['type'].value_counts()
        x = y.index

        ax.set_xlabel('Tipo', labelpad=10)
        ax.set_ylabel('Total', labelpad=15)

        ax.bar(x, y, width=0.3)
        # Ajustar automáticamente los márgenes
        fig.tight_layout()

        # Ajustar tamaño dinámico según el contenedor
        self.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        self.updateGeometry()

    def resizeEvent(self, event):
        """Ajustar el diseño al cambiar el tamaño de la ventana."""
        super().resizeEvent(event)
        self.figure.tight_layout()
        self.draw()


"""


class Canvas_grafica(FigureCanvas):
    def __init__(self, parent=None):
        # Configurar figura y ejes con colores para modo oscuro
        self.fig, self.ax = plt.subplots(1, dpi=100, figsize=(5, 5),
                                         sharey=True, facecolor='#2e2e2e')  # Fondo oscuro
        super().__init__(self.fig)

        # Datos de la gráfica
        nombres = ['15', '25', '30', '35', '40']
        colores = ['#ff6f61', '#ff6f61', '#ff6f61', '#ff6f61', '#ff6f61']  # Tonos visibles en fondo oscuro
        tamaño = [10, 15, 20, 25, 30]

        # Gráfica de barras
        self.ax.bar(nombres, tamaño, color=colores)

        # Personalización del estilo en modo oscuro
        self.ax.set_facecolor('#2e2e2e')  # Fondo del gráfico
        self.ax.tick_params(axis='x', colors='white')  # Ejes x
        self.ax.tick_params(axis='y', colors='white')  # Ejes y
        self.ax.spines['bottom'].set_color('white')  # Color del marco inferior
        self.ax.spines['left'].set_color('white')  # Color del marco izquierdo

        # Título y etiquetas
        self.fig.suptitle('Grafica de Barras', size=9, color='white')  # Título en blanco
"""


class Ui_GraphicsWindow(QMainWindow):
    def __init__(self, parent, window_key):
        super().__init__()

        self.parent = parent
        self.window_key = window_key

        self.setStyleSheet(get_stylesheet())
        self.setupUi(self)

    def setupUi(self, GraphicsWindow):
        GraphicsWindow.setObjectName("GraphicsWindow")
        GraphicsWindow.resize(800, 600)

        self.main_widget = QtWidgets.QWidget(parent=GraphicsWindow)
        self.main_widget.setObjectName("main_widget")

        self.horizontalLayout = QtWidgets.QHBoxLayout(self.main_widget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")

        self.main_frame = QtWidgets.QFrame(parent=self.main_widget)
        self.main_frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.main_frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.main_frame.setObjectName("main_frame")

        self.verticalLayout = QtWidgets.QVBoxLayout(self.main_frame)
        self.verticalLayout.setObjectName("verticalLayout")

        self.tab_widget = QtWidgets.QTabWidget(parent=self.main_frame)
        self.tab_widget.setMinimumSize(QtCore.QSize(0, 150))
        self.tab_widget.setObjectName("tab_widget")

        self.tab_media = QtWidgets.QWidget()
        self.tab_media.setObjectName("tab_media")

        self.vertical_layout_media = QtWidgets.QVBoxLayout(self.tab_media)
        self.vertical_layout_media.setObjectName("vertical_layout_media")
        self.vertical_layout_media.setContentsMargins(0, 5, 0, 5)

        self.frame_options_media = QtWidgets.QFrame(parent=self.tab_media)
        self.frame_options_media.setMaximumHeight(100)
        # self.frame_options_media.setStyleSheet("border: 1px solid;")
        self.frame_options_media.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_options_media.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_options_media.setObjectName("frame_options_media")

        # vertical_layout_media and frame_graphic_media
        self.vertical_layout_media.addWidget(self.frame_options_media)

        self.frame_graphic_media = QtWidgets.QFrame(parent=self.tab_media)

        # self.frame_graphic_media.setStyleSheet("border: 1px solid;")
        self.frame_graphic_media.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_graphic_media.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)

        self.frame_graphic_media.setObjectName("frame_graphic_media")

        self.vertical_layout_media.addWidget(self.frame_graphic_media)
        self.vertical_layout_media.setStretch(0, 1)
        self.vertical_layout_media.setStretch(1, 5)

        # vertical_layout_graphic_media and layout_graphic_media
        self.vertical_layout_graphic_media = QtWidgets.QVBoxLayout(self.frame_graphic_media)
        self.vertical_layout_graphic_media.setObjectName("vertical_layout_graphic_media")

        self.layout_graphic_media = QtWidgets.QVBoxLayout()
        self.layout_graphic_media.setObjectName("layout_graphic_media")

        self.vertical_layout_graphic_media.addLayout(self.layout_graphic_media)

        self.tab_widget.addTab(self.tab_media, "")

        self.tab_questions = QtWidgets.QWidget()
        self.tab_questions.setObjectName("tab_questions")

        self.vertical_layout_questions = QtWidgets.QVBoxLayout(self.tab_questions)
        self.vertical_layout_questions.setObjectName("vertical_layout_questions")
        self.vertical_layout_questions.setContentsMargins(0, 5, 0, 5)

        self.frame_options_question = QtWidgets.QFrame(parent=self.tab_questions)
        self.frame_options_question.setMaximumHeight(100)
        # self.frame_options_question.setStyleSheet("border: 1px solid;")
        self.frame_options_question.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_options_question.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_options_question.setObjectName("frame_options_question")

        self.vertical_layout_questions.addWidget(self.frame_options_question)

        self.frame_graphic_question = QtWidgets.QFrame(parent=self.tab_questions)
        # self.frame_graphic_question.setStyleSheet("border: 1px solid;")
        self.frame_graphic_question.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_graphic_question.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_graphic_question.setObjectName("frame_graphic_question")

        self.vertical_layout_questions.addWidget(self.frame_graphic_question)
        self.vertical_layout_questions.setStretch(0, 1)
        self.vertical_layout_questions.setStretch(1, 5)

        # vertical_layout_graphic_questions and layout_graphic_questions
        self.vertical_layout_graphic_questions = QtWidgets.QVBoxLayout(self.frame_graphic_question)
        self.vertical_layout_graphic_questions.setObjectName("vertical_layout_graphic_questions")

        self.layout_graphic_questions = QtWidgets.QVBoxLayout()
        self.layout_graphic_questions.setObjectName("layout_graphic_questions")

        self.vertical_layout_graphic_questions.addLayout(self.layout_graphic_questions)

        self.tab_widget.addTab(self.tab_questions, "")

        self.verticalLayout.addWidget(self.tab_widget)
        self.horizontalLayout.addWidget(self.main_frame)

        GraphicsWindow.setCentralWidget(self.main_widget)

        self.retranslateUi(GraphicsWindow)
        self.tab_widget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(GraphicsWindow)
        self.frame_options_media.setStyleSheet("""
            border: none;
            background-color: #2e2e2e; /* Fondo oscuro opcional */
        """)

        self.frame_graphic_media.setStyleSheet("""
            border: none;
            background-color: #2e2e2e; /* Fondo oscuro opcional */
        """)
        # self.frame_graphic_media.setFixedSize(400, 400)

        self.frame_options_question.setStyleSheet("""
            border: none;
            background-color: #2e2e2e; /* Fondo oscuro opcional */
        """)

        self.frame_graphic_question.setStyleSheet("""
            border: none;
            background-color: #2e2e2e; /* Fondo oscuro opcional */
        """)
        # border: 1px ;
        # border-radius: 10px; /* Borde redondeado */

        graphic_one = MediaCanvas()
        self.layout_graphic_media.addWidget(graphic_one)

        # self.vertical_layout_graphic_media.addWidget(graphic_one)
        # self.vertical_layout_graphic_media.setSizeConstraint(QtWidgets.QLayout.SizeConstraint.SetFixedSize)

    def retranslateUi(self, GraphicsWindow):
        _translate = QtCore.QCoreApplication.translate
        GraphicsWindow.setWindowTitle(_translate("GraphicsWindow", "MainWindow"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.tab_media), _translate("GraphicsWindow", "Media"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.tab_questions),
                                   _translate("GraphicsWindow", "Preguntas"))

    def closeEvent(self, a0: typing.Optional[QCloseEvent]) -> None:
        if not hasattr(self.parent, "windows") or not isinstance(self.parent, QWidget):
            return

        self.parent.handle_windows(self.window_key)

        return super().closeEvent(a0)